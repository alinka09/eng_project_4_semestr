{"version":3,"sources":["Api/ApiService.js","Components/ListCompany.js","Components/Header.js","Components/Vacancy.js","Components/Admin.js","Components/Main.js","Components/LoginForm.js","Components/AboutUs.js","Components/CreateUpdateCompany.js","App.js","index.js"],"names":["URL","ApiService","link","a","url","fetch","method","headers","localStorage","token","then","res","json","response","id","data","body","JSON","stringify","console","log","React","Component","apiService","ListCompany","props","state","company","getDatas","setState","className","this","map","compan","name","opisanie","telephon","fio","Header","logout","event","preventDefault","setLogged","removeItem","history","push","href","to","onClick","HeaderWithRouter","withRouter","Vacancy","rabota","scope","item","trebovanie","uslovia","obyazannosti","Admin","pochta","handleSubmit","bind","value","createData","e","Object","assign","target","deleteData","getData","sort","handleSort","login","password","handleDelete","Main","getItem","is_staff","is_superuser","Login","getPermissions","users","user","username","setItem","set_status","callback","credentials","undefined","catch","alert","inputChange","cred","for","type","onChange","LoginWithRouter","AboutUs","bootstrap","rel","integrity","crossorigin","src","CreateUpdateCompany","params","queryString","parse","location","search","handleUpdate","handleCreate","updateData","companreq","onSubmit","handleChange","CreateUpdateCompanyWithRouter","App","onChangeToken","is_logged","setLoggedStatus","setisStaffIsSuperuser","LoginForm","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05c98977.chunk.js","sourcesContent":["import React from 'react'\r\nconst URL = 'http://localhost:8000/api';\r\n\r\n\r\nexport default class ApiService extends React.Component {\r\n\tasync getDatas(link) {\r\n\t\tlet url = URL + `/${link}/`\r\n\t\tconst response = await fetch(url, {\r\n\t\t\t\tmethod: \"GET\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Authorization': `Token ${localStorage.token}`,\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.then((res) => res.json())\r\n\t\treturn response\r\n\t}\r\n\r\n\tasync getData(id, link) {\r\n\t\tlet url = URL + `/${link}/${id}`;\r\n\t\treturn await fetch(url, {\r\n\t\t\t\tmethod: \"GET\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Authorization': `Token ${localStorage.token}`,\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.then((res) => res.json())\r\n\t}\r\n\r\n\tasync deleteData(id, link) {\r\n\t\tlet url = URL + `/${link}/${id}`;\r\n\t\treturn await fetch(url, {\r\n\t\t\tmethod: \"DELETE\",\r\n\t\t\theaders: {\r\n\t\t\t\t'Authorization': `Token ${localStorage.token}`,\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tasync createData(data, link) {\r\n\t\tlet url = URL + `/${link}/`;\r\n\t\treturn fetch(url, {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tbody: JSON.stringify(data),\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-type': 'application/json',\r\n\t\t\t\t\t'Authorization': `Token ${localStorage.token}`,\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.then(res => {\r\n\t\t\t\tconsole.log(res)\r\n\t\t\t})\r\n\t}\r\n\r\n\tasync updateData(data, link) {\r\n\t\tlet url = URL + `/${link}/${data.id}`\r\n\t\treturn fetch(url, {\r\n\t\t\t\tmethod: 'PUT',\r\n\t\t\t\tbody: JSON.stringify(data),\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-type': 'application/json',\r\n\t\t\t\t\t'Authorization': `Token ${localStorage.token}`,\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.then(res => {\r\n\t\t\t\tconsole.log(res)\r\n\t\t\t})\r\n\t}\r\n}","import React from 'react';\r\nimport ApiService from '../Api/ApiService'\r\n\r\nconst apiService = new ApiService();\r\nconst link = 'company';\r\nexport default class ListCompany extends React.Component {\r\n    constructor (props) {\r\n        super(props)\r\n        this.state = {\r\n            company:[]\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        apiService.getDatas(link).then(response=> {\r\n            this.setState({company: response.data})\r\n        })\r\n\r\n    }\r\n\r\n\r\n    render()  {\r\n        return (\r\n            <main className='apiTest'>\r\n                <h2 className='apiTest__title'>Список компаний</h2>\r\n                <ul className='apiTest__list'>\r\n                {this.state.company.map((compan)=>\r\n                    <li className='apiTest__item' key={compan.id}>\r\n                        id:{compan.id}<br/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t Наименование: {compan.name}<br/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t Описание: {compan.opisanie}<br/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t Телефон: {compan.telephon}<br/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t Фио: {compan.fio}<br/>\r\n                    </li>\r\n                )}\r\n                </ul>\r\n            </main>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { withRouter} from 'react-router-dom'\r\nimport {Link} from 'react-router-dom'\r\nimport '../Styles/Style.css'\r\n\r\nclass Header extends React.Component {\r\n\r\n    logout = event => {\r\n        event.preventDefault();\r\n        this.props.setLogged(false)\r\n        localStorage.removeItem('token')\r\n        localStorage.removeItem('username')\r\n        localStorage.removeItem('is_staff')\r\n        localStorage.removeItem('is_superuser')\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    render() {return(\r\n        <header className='header'>\r\n            <nav className='navbar'>\r\n                <a href='#brand' className='navbar__brand'>Личный кабинет</a>\r\n                <ul className='navbar__ul ul__links'>\r\n                    <li className='navbar__item'>\r\n                        <Link className='navbar__link' to='/Main'>Главная</Link>\r\n                    </li>\r\n                    <li className='navbar__item'>\r\n                        <Link className='navbar__link' to='/ListCompany'>Список компаний</Link>\r\n                    </li>\r\n\t\t\t\t\t\t\t\t\t\t<li className='navbar__item'>\r\n                        <Link className='navbar__link' to='/AboutUs'>О проекте</Link>\r\n                    </li>\r\n                </ul>\r\n                <ul className='navbar__ul'>\r\n                    <li className='navbar__item'>\r\n                        <a className='navbar__link' href='#logout' onClick={this.logout}>Выйти</a>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )}\r\n}\r\nconst HeaderWithRouter = withRouter(Header)\r\nexport default HeaderWithRouter","import React from 'react';\r\nimport ApiService from '../Api/ApiService'\r\n\r\nconst link = 'rabota';\r\nconst apiService = new ApiService();\r\n\r\nexport default class Vacancy extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state={\r\n            rabota:[]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        apiService.getDatas(link).then(response=>{\r\n            this.setState({rabota:response.data})\r\n            console.log(response.data)\r\n        })\r\n    }\r\n\r\n    render(){\r\n    return(\r\n\t\t\t\t\t<div className='admin'>\r\n\t\t\t\t\t\t<div className='table__description'>\r\n\t\t\t\t\t\t\t\t<h4 className='table__title'>Доступные вакансии</h4>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<table className='table'>\r\n\t\t\t\t\t\t\t\t<thead className='table__head'>\r\n\t\t\t\t\t\t\t\t\t\t<tr className='table__row'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope='col'>Название</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope='col'>Описание</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope='col'>Требование</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope='col'>Условия</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope='col'>Обязанности</th>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t<tbody className='table__body'>\r\n\t\t\t\t\t\t\t\t{this.state.rabota.map((item)=>\r\n\t\t\t\t\t\t\t\t\t\t\t<tr className='table__row'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{item.name}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{item.opisanie}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{item.trebovanie}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{item.uslovia}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{item.obyazannosti}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t</div>\r\n    )}\r\n}","import React from 'react'\r\nimport ApiService from '../Api/ApiService';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst apiService = new ApiService();\r\nconst link = 'company'\r\nexport default class Admin extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            compan:{\r\n                name: '',\r\n                opisanie: '',\r\n                pochta: \"\",\r\n                telephon: '',\r\n            },\r\n            company:[]\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        let compan = this.state.compan\r\n        let value = {\r\n            \"name\": compan.name,\r\n            \"opisanie\": compan.opisanie,\r\n            \"telephon\": compan.telephon,\r\n            \"pochta\": compan.pochta,\r\n        }\r\n        apiService.createData(value,link)\r\n    }\r\n    handleChange(e) {\r\n        // this.setState({...this.state.name,name: e.target.value})\r\n        this.setState(state=>{\r\n            let compan = Object.assign({},state.compan);\r\n            compan[e.target.name] = e.target.value\r\n            return {\r\n                compan\r\n            }\r\n        })\r\n        console.log(this.state.compan)\r\n    }\r\n\r\n    getData() {\r\n        apiService.getDatas(link).then(response=> {\r\n            this.setState({company: response.data})\r\n        })\r\n    }\r\n\r\n    handleDelete(id) {\r\n        apiService.deleteData(id,link)\r\n        this.getData();\r\n    }\r\n    componentDidMount() {\r\n        this.getData()\r\n    }\r\n    handleSort(e) {\r\n        this.state.company.sort()\r\n    }\r\n    render(){\r\n        return(\r\n            <div className='admin'>\r\n                <div className='table__description'>\r\n                    <h4 className='table__title'>Список компаний</h4>\r\n                    <Link className='admin__button' to='/CreateUpdateCompany'><b>+</b> добавить компанию</Link>\r\n                </div>\r\n                <table className='table'>\r\n                    <thead className='table__head'>\r\n                        <tr className='table__row'>\r\n                            <th onClick={()=>this.handleSort('id')} scope='col'>id</th>\r\n                            <th scope='col'>Название</th>\r\n                            <th scope='col'>Описание</th>\r\n                            <th scope='col'>Телефон</th>\r\n                            <th scope='col'>Почта</th>\r\n                            <th scope='col'>ФИО представителя</th>\r\n                            <th scope='col'>Логин</th>\r\n                            <th scope='col'>Пароль</th>\r\n                            <th scope='col'>Действие</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className='table__body'>\r\n                        {this.state.company.map((compan)=>\r\n                           <tr className='table__row'>\r\n                               <td>{compan.id}</td>\r\n                               <td>{compan.name}</td>\r\n                               <td>{compan.opisanie}</td>\r\n                               <td>{compan.telephon}</td>\r\n                               <td>{compan.pochta}</td>\r\n                               <td>{compan.fio}</td>\r\n                               <td>{compan.login}</td>\r\n                               <td>{compan.password}</td>\r\n                               <td><button className='table__delete' onClick={e=>{\r\n                                this.handleDelete(compan.id)\r\n                            }}>Удалить</button>\r\n                               <Link className='table__update' to={'/CreateUpdateCompany/?id='+compan.id}>Изменить</Link></td>\r\n                           </tr>\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport Vacancy from './Vacancy'\r\nimport Admin from './Admin'\r\n\r\nexport default class Main extends React.Component {\r\n    render() {\r\n        return(\r\n        <main>\r\n            <div className='mainPage'>\r\n                <h1 className=\"mainPage__title\">Добро пожаловать, {localStorage.getItem('username')}!</h1>\r\n            </div>\r\n            {this.props.is_staff===true||localStorage.getItem('is_staff')===\"true\"\r\n            ? <Vacancy/>\r\n            : null\r\n            }\r\n            {this.props.is_superuser===true||localStorage.getItem('is_superuser')===\"true\"\r\n            ? <Admin/>\r\n            : null\r\n            }\r\n        </main>\r\n    )}\r\n}","import React from 'react';\r\nimport { withRouter} from 'react-router-dom'\r\nclass Login extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      credentials: {\r\n        username: '',\r\n        password: '',\r\n      },\r\n      url: 'http://react-4-sem.std-960.ist.mospolytech.ru/',\r\n      data: {},\r\n      users: [],\r\n      token: null,\r\n    }\r\n  }\r\n\r\n  getPermissions = async event => {\r\n    await fetch(`${this.state.url}api/users/`,{\r\n      method: \"GET\",\r\n      headers: {\r\n        'Content-type' :'application/json',\r\n        'Authorization': `Token ${localStorage.getItem('token')}`\r\n      }\r\n    })\r\n    .then(res => res.json())\r\n    .then(res=>{\r\n      this.setState({users:res})\r\n      this.state.users.map((user)=>{\r\n          if(user.username===localStorage.getItem('username')) {\r\n            localStorage.setItem('is_staff',user.is_staff);\r\n            localStorage.setItem('is_superuser',user.is_superuser);\r\n            this.props.set_status(user.is_staff,user.is_superuser);\r\n            console.log(this.props.is_staff,this.props.is_superuser);\r\n        }\r\n        return user;\r\n      })\r\n    })\r\n    this.props.history.push(\"/Main\");\r\n    this.props.setLogged(true)\r\n  }\r\n  login = async (event,callback) => {\r\n    event.preventDefault()\r\n    await fetch(`${this.state.url}auth/`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(this.state.credentials)\r\n    })\r\n    .then(res=>res.json())\r\n    .then(res=>{\r\n      this.setState({data:res})\r\n      if(res.token!==null && res.token!==undefined) {\r\n        localStorage.setItem('token',res.token)\r\n        this.setState({'token':res.token})\r\n      }\r\n    })\r\n    .catch()\r\n\r\n    if(localStorage.getItem('token')!==null ) {\r\n      this.getPermissions();\r\n      } else {\r\n        alert('Вы ввели неверные данные')\r\n      }\r\n    }\r\n\r\n\r\n  inputChange = event => {\r\n    let cred = this.state.credentials;\r\n    cred[event.target.name] = event.target.value;\r\n    this.setState({credentials: cred});\r\n    localStorage.setItem('username',cred.username)\r\n  }\r\n\r\n  render() {\r\n    return(\r\n    <div className='loginForm'>\r\n      <h1 className='loginForm__title'>Добро Пожаловать!</h1>\r\n      <form>\r\n        <div className='loginForm__div'>\r\n          <label className='loginForm__label' for='username'>\r\n            Имя пользователя:\r\n          </label>\r\n            <input\r\n              id='username'\r\n              className='loginForm__input'\r\n              type='text'\r\n              name=\"username\"\r\n              value={this.state.credentials.username}\r\n              onChange={this.inputChange}\r\n            />\r\n        </div>\r\n        <div className='loginForm__div'>\r\n          <label className='loginForm__label' for='password'>\r\n            Пароль:\r\n          </label>\r\n          <input\r\n            id='password'\r\n            className='loginForm__input'\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={this.state.credentials.password}\r\n            onChange={this.inputChange}\r\n          />\r\n        </div>\r\n        <button className='loginForm__button' onClick={e=>this.login(e)}>Войти</button>\r\n      </form>\r\n    </div>\r\n  )}\r\n}\r\n\r\nconst LoginWithRouter = withRouter(Login)\r\nexport default LoginWithRouter","/* eslint-disable jsx-a11y/alt-text */\r\nimport React from 'react'\r\nimport '../Styles/Style.css'\r\n\r\nexport default class AboutUs extends React.Component {\r\n\r\n    logout = event => {\r\n        event.preventDefault();\r\n        this.props.setLogged(false)\r\n        localStorage.removeItem('token')\r\n        localStorage.removeItem('username')\r\n        localStorage.removeItem('is_staff')\r\n        localStorage.removeItem('is_superuser')\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    render() {\r\n\r\n        const bootstrap = <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\"></link>\r\n\r\n        return(\r\n        <div className='container'>\r\n            {bootstrap}\r\n            <div className='mt-4'>\r\n\t\t\t\t\t\t\t\t\t<h1 className='text-center'>Информация о проекте</h1>\r\n\t\t\t\t\t\t</div>\r\n            <p>\r\n\t\t\t\t\t\t\t\tЗдравствуйте!\r\n\t\t\t\t\t\t\t\tЗдесь вы можете найти всю информацию о данном сайте. Меня зовут Тишкина Алина Федоровна, я студентка группы 191-322.\r\n\t\t\t\t\t\t\t\tПредставляю вашему вниманию мой инженерный проект.\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\tВ шапке страницы вы видите 4 вкладки: Главная, Список компаний, RestApi, О проекте.\r\n\t\t\t\t\t\t\t\tНазвания этих страниц говорят сами за себя. На главной стрнице происходит вывод данных из таблицы Работа и Компании.\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\tЕсли пользователь зашел под админом, то он имеет право добавить новую компанию, а также удалить или изменить какоу-то конкретную запись.\r\n\t\t\t\t\t\t\t\tНа странице \"Список компаний\" происходит вывод агрегирующей информации. Удачного Вам пользования! Также вы можете войти под двумя другими пользователями. Это personal и user. (Все данные о них можно найти в админ панеле Джанго)\r\n\t\t\t\t\t\t</p>\r\n            <img src=\"mem.jpg\" className='mx-auto d-block' />\r\n        </div>\r\n    )}\r\n}","import React from 'react'\r\nimport ApiService from '../Api/ApiService';\r\nimport {Link} from 'react-router-dom'\r\nimport queryString from 'query-string';\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nconst apiService = new ApiService();\r\nconst url = 'company'\r\nclass CreateUpdateCompany extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            compan:{\r\n                name: '',\r\n                opisanie: '',\r\n                pochta: '',\r\n                telephon: '',\r\n\t\t\t\t\t\t\t\tfio:'',\r\n\t\t\t\t\t\t\t\tlogin:'',\r\n\t\t\t\t\t\t\t\tpassword:''\r\n            },\r\n            company:[],\r\n            params: queryString.parse(this.props.location.search)\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleCreate() {\r\n        let compan = this.state.compan\r\n        let value = {\r\n            \"name\": compan.name,\r\n            \"opisanie\": compan.opisanie,\r\n            \"telephon\": compan.telephon,\r\n            \"pochta\": compan.pochta,\r\n            \"fio\": compan.fio,\r\n            \"login\": compan.login,\r\n            \"password\": compan.password,\r\n        }\r\n        apiService.createData(value,url)\r\n        this.props.history.push(\"/Main\")\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        let params = this.state.params;\r\n        event.preventDefault()\r\n        if(params&&params.id) {\r\n            this.handleUpdate(params.id)\r\n        } else {\r\n            this.handleCreate();\r\n        }\r\n    }\r\n    handleChange(e) {\r\n        this.setState(state=>{\r\n            let compan = Object.assign({},state.compan);\r\n            compan[e.target.name] = e.target.value\r\n            return {\r\n                compan\r\n            }\r\n        })\r\n        console.log(this.state.compan)\r\n    }\r\n    handleUpdate(e) {\r\n        this.props.history.push(\"/Main\")\r\n        apiService.updateData(this.state.compan,url)\r\n    }\r\n    componentDidMount() {\r\n        let params = this.state.params;\r\n        if(params && params.id) {\r\n            apiService.getData(params.id,url).then((companreq)=>{\r\n                this.setState({compan:companreq})\r\n            })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <form className='createUpdateForm' onSubmit={this.handleSubmit}>\r\n                <h4 className='createUpdateForm__title'>Добавить компанию</h4>\r\n                <label className='createUpdateForm__label' for ='name'> Название:</label>\r\n                <input\r\n                    id='name'\r\n                    className=\"createUpdateForm__input\"\r\n                    name='name'\r\n                    type=\"text\"\r\n                    value={this.state.compan.name}\r\n                    onChange={e=>this.handleChange(e)}\r\n                />\r\n                <label className='createUpdateForm__label' for='opisanie'> Описание:</label>\r\n\t\t\t\t\t\t\t\t<input\r\n                    id='opisanie'\r\n                    className=\"createUpdateForm__input\"\r\n                    name='opisanie'\r\n                    type=\"text\"\r\n                    value={this.state.compan.opisanie}\r\n                    onChange={e=>this.handleChange(e)}\r\n                />\r\n                <label className='createUpdateForm__label' for='pochta'> E-mail:</label>\r\n\t\t\t\t\t\t\t\t<input\r\n                    id='pochta'\r\n                    className=\"createUpdateForm__input\"\r\n                    name='pochta'\r\n                    type=\"text\"\r\n                    value={this.state.compan.pochta}\r\n                    onChange={e=>this.handleChange(e)}\r\n                />\r\n\r\n                <label className='createUpdateForm__label' for='telephon'> Номер телефона:</label>\r\n                <input\r\n                    id='telephon'\r\n                    className=\"createUpdateForm__input\"\r\n                    name='telephon'\r\n                    type=\"text\"\r\n                    value={this.state.compan.telephon}\r\n                    onChange={e=>this.handleChange(e)}\r\n                />\r\n\r\n\r\n\t\t\t\t\t\t\t<label className='createUpdateForm__label' for='fio'> Описание:</label>\r\n\t\t\t\t\t\t\t\t<input\r\n                    id='fio'\r\n                    className=\"createUpdateForm__input\"\r\n                    name='fio'\r\n                    type=\"text\"\r\n                    value={this.state.compan.fio}\r\n                    onChange={e=>this.handleChange(e)}\r\n                />\r\n                <label className='createUpdateForm__label' for='login'> E-mail:</label>\r\n\t\t\t\t\t\t\t\t<input\r\n                    id='login'\r\n                    className=\"createUpdateForm__input\"\r\n                    name='login'\r\n                    type=\"text\"\r\n                    value={this.state.compan.login}\r\n                    onChange={e=>this.handleChange(e)}\r\n                />\r\n\r\n                <label className='createUpdateForm__label' for='password'> Номер телефона:</label>\r\n                <input\r\n                    id='password'\r\n                    className=\"createUpdateForm__input\"\r\n                    name='password'\r\n                    type=\"text\"\r\n                    value={this.state.compan.password}\r\n                    onChange={e=>this.handleChange(e)}\r\n                />\r\n                <div className='createUpdateForm__buttons'>\r\n                    <input className=\"createUpdateForm__button button__save\" type=\"submit\" value=\"Сохранить\" />\r\n                    <Link className='createUpdateForm__button button__back' to='/Main'>Назад</Link>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst CreateUpdateCompanyWithRouter = withRouter(CreateUpdateCompany)\r\nexport default CreateUpdateCompanyWithRouter","import React from 'react'\r\nimport './App.css';\r\nimport ListCompany from'./Components/ListCompany'\r\nimport Header from './Components/Header'\r\nimport {BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Main from './Components/Main';\r\nimport LoginForm from './Components/LoginForm';\r\nimport AboutUs from './Components/AboutUs';\r\nimport CreateUpdateCompany from './Components/CreateUpdateCompany'\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      is_logged: localStorage.getItem('token') ? true: false,\r\n      token: null,\r\n      is_staff: localStorage.getItem('is_staff'),\r\n      is_superuser: localStorage.getItem('is_superuser'),\r\n    }\r\n\r\n    this.setLoggedStatus = this.setLoggedStatus.bind(this)\r\n    this.setisStaffIsSuperuser = this.setisStaffIsSuperuser.bind(this)\r\n  }\r\n  onChangeToken = e => {\r\n    this.setState(e)\r\n  }\r\n  componentDidMount() {\r\n    if(localStorage.getItem('token')!==undefined){\r\n      this.setState({'is_logged':false})\r\n    }\r\n  }\r\n  setisStaffIsSuperuser(is_staff,is_superuser) {\r\n    this.setState({'is_staff':is_staff,'is_superuser':is_superuser})\r\n  }\r\n  setLoggedStatus(e) {\r\n    this.setState({'is_logged':e});\r\n  }\r\n  render() {\r\n    if(localStorage.getItem('token')===null||localStorage.getItem('token')===undefined) {\r\n      return (\r\n      <Router>\r\n        <LoginForm\r\n          token={this.state.token}\r\n          url={this.state.url}\r\n          is_logged={this.state.is_logged}\r\n          setLogged={this.setLoggedStatus}\r\n          is_staff={this.state.is_staff}\r\n          is_superuser={this.state.is_superuser}\r\n          set_status={this.setisStaffIsSuperuser}\r\n        />\r\n      </Router>\r\n      )\r\n    } else {\r\n    return(\r\n    <Router>\r\n      <Header\r\n          token={this.state.token}\r\n          url={this.state.url}\r\n          is_logged={this.state.is_logged}\r\n          setLogged={this.setLoggedStatus}\r\n          is_staff={this.state.is_staff}\r\n          is_superuser={this.state.is_superuser}\r\n          set_status={this.setisStaffIsSuperuser}\r\n        />\r\n      <Switch>\r\n      <Route path='/Main'>\r\n          <Main\r\n            is_staff={this.state.is_staff}\r\n            is_superuser={this.state.is_superuser}\r\n          />\r\n        </Route>\r\n        <Route path='/ListCompany'>\r\n          <ListCompany\r\n            url = {this.state.url}\r\n          />\r\n        </Route>\r\n        <Route path='/AboutUs'>\r\n          <AboutUs></AboutUs>\r\n        </Route>\r\n        <Route path='/CreateUpdateCompany' component={CreateUpdateCompany}>\r\n        </Route>\r\n        {/* <Route path='/CreateUpdateCompany/:id' component={CreateUpdateCompany}> */}\r\n        <Route path='/CreateUpdateCompany/?id=id'> render={(props)=> <CreateUpdateCompany {...props}/>}\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  )}}\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}